{"version":3,"file":"static/js/209.76155ca2.chunk.js","mappings":"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","sources":["Pages/MovieDetailsPage/MovieDetailsPage.styled.js","Pages/MovieDetailsPage/MovieDetailsPage.jsx","components/shared/api/api-movie.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wraper = styled.div`\n  background-color: rgb(211, 4, 4);\n  margin: 7%;\n  padding: 3% 0;\n  color: white;\n  position: relative;\n  @media (min-width: 1024px) {\n    margin: 10%;\n  } ;\n`;\n\nexport const Wrap = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  display: inline-block;\n\n  @media (min-width: 1024px) {\n    display: flex;\n    gap: 10px;\n    padding: 50px;\n  }\n`;\nexport const PosterLinkWrap = styled.div`\n  position: relative;\n  display: flex;\n\n  @media (min-width: 1024px) {\n    gap: 10px;\n    height: 500px;\n  } ;\n`;\n\nexport const StyledLink = styled(Link)`\n  background-color: rgb(255, 166, 0);\n  border: none;\n  cursor: pointer;\n  margin-left: 10px;\n\n  @media (min-width: 1024px) {\n    margin: 50px, 200px, 0, 10px;\n\n    padding: 230px 5px;\n    margin-left: -40px;\n  }\n\n  span {\n    width: 35px;\n    display: inline-block;\n    color: red;\n    transform: rotate(-90deg);\n    text-align: center;\n\n    @media (min-width: 420px) {\n      font-size: 15px;\n      text-align: center;\n    }\n\n    @media (min-width: 1024px) {\n      margin-top: auto;\n      margin-bottom: auto;\n      width: 40px;\n      font-size: 15px;\n    }\n  }\n`;\n\nexport const Poster = styled.img`\n  height: 400px;\n  margin-right: auto;\n  margin-left: auto;\n\n  @media (max-width: 420px) {\n    height: 300px;\n  }\n\n  @media (min-width: 1024px) {\n    height: 500px;\n    margin-left: 10px;\n  }\n`;\n\nexport const Text = styled.div`\n  display: flex;\n  text-align: center;\n  justify-content: center;\n\n  @media (min-width: 1024px) {\n    height: 500px;\n    border-right: 1px dashed white;\n  }\n`;\n\nexport const Genres = styled.p`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Overview = styled.div`\n  padding: 0 40px;\n  @media (min-width: 1024px) {\n    width: 30%;\n    padding: 0;\n  } ;\n`;\n\nexport const MovieDetails = styled.ul`\n  padding: 0;\n  width: 50%;\n  height: 100px;\n  margin-left: 30px;\n`;\n\nexport const StyledLinkInfo = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: rgb(211, 4, 4);\n  font-weight: bold;\n  font-size: large;\n  text-transform: uppercase;\n  margin-bottom: 10px;\n  padding: 0 11%;\n  background-color: rgb(247, 141, 3);\n\n  :hover {\n    color: rgb(255, 196, 0);\n  }\n`;\n","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { getMovieDetails } from 'components/shared/api/api-movie';\nimport { Loader } from 'components/shared/Loader/Loader';\n\nimport defaultimage from './dfi.jpg';\nimport {\n  Genres,\n  Overview,\n  Poster,\n  StyledLink,\n  Text,\n  Wrap,\n  Wraper,\n  StyledLinkInfo,\n  PosterLinkWrap,\n} from './MovieDetailsPage.styled';\n\nconst MovieDetailsPage = () => {\n  const [item, setItem] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        const result = await getMovieDetails(movieId);\n        // console.log(result);\n        setItem(result);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        return setLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  const location = useLocation();\n  // console.log(location);\n  // const from = location.state?.from || '/';\n  const backLinkLocation = useRef(location.state?.from ?? '/movies');\n  // console.log(backLinkLocation);\n\n  // const navigate = useNavigate();\n  // const goBack = () => navigate(from);\n\n  return (\n    <>\n      {error && <p>...error load ...load failed {error}</p>}\n      {loading && <Loader />}\n\n      <Wraper>\n        <Wrap>\n          <PosterLinkWrap>\n            <StyledLink to={backLinkLocation.current}>\n              <span>GO BACK</span>\n            </StyledLink>\n\n            <Poster\n              src={\n                item?.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${item.poster_path}`\n                  : defaultimage\n              }\n              alt={item.title}\n            />\n          </PosterLinkWrap>\n\n          <Text>\n            <div>\n              <h2>{item.title}</h2>\n              <p> {item.release_date}</p>\n\n              <p>\n                Vote <span>{Math.ceil(item.vote_average * 100) / 10}%</span>\n              </p>\n              <Genres>\n                Genres:\n                {item.genres &&\n                  item.genres.map(genre => (\n                    <span key={genre.id}>{genre.name}</span>\n                  ))}\n              </Genres>\n            </div>\n          </Text>\n          <Overview>\n            <h5>Overview: {item.overview}</h5>\n          </Overview>\n        </Wrap>\n        <ul>\n          <StyledLinkInfo to={`/movies/${movieId}/cast`}>Actors</StyledLinkInfo>\n          <StyledLinkInfo to={`/movies/${movieId}/reviews`}>\n            Reviews\n          </StyledLinkInfo>\n        </ul>\n        <Outlet />\n      </Wraper>\n    </>\n  );\n};\nexport default MovieDetailsPage;\n\nMovieDetailsPage.propTypes = {\n  movieId: PropTypes.string,\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getTrendingMovie = async (page = 1) => {\n  const { data } = await instance.get(\n    '/trending/movie/week?api_key=f7a41df070de2591b426f4643d7fd0fb&language=en-US'\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await instance.get(\n    `/movie/${movieId}?api_key=f7a41df070de2591b426f4643d7fd0fb&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await instance.get(\n    `/movie/${movieId}}/credits?api_key=f7a41df070de2591b426f4643d7fd0fb&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const getReview = async movieId => {\n  const { data } = await instance.get(\n    `/movie/${movieId}/reviews?api_key=f7a41df070de2591b426f4643d7fd0fb&language=en-US`\n  );\n  return data.results;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get(\n    `/search/movie?query=${query}&api_key=f7a41df070de2591b426f4643d7fd0fb&language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["Wraper","styled","Wrap","PosterLinkWrap","StyledLink","Link","Poster","Text","Genres","Overview","StyledLinkInfo","useState","item","setItem","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchMovie","getMovieDetails","result","message","location","useLocation","backLinkLocation","useRef","state","from","Loader","to","current","src","poster_path","defaultimage","alt","title","release_date","Math","ceil","vote_average","genres","map","genre","name","id","overview","instance","axios","baseURL","getTrendingMovie","get","data","results","response","getCast","cast","getReview","getSearchMovie","query"],"sourceRoot":""}