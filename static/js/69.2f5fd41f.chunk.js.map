{"version":3,"file":"static/js/69.2f5fd41f.chunk.js","mappings":"0QACA,GAAgB,OAAS,mCAAmC,KAAO,iCAAiC,OAAS,mCAAmC,KAAO,iCAAiC,OAAS,mCAAmC,SAAW,qCAAqC,KAAO,iCAAiC,KAAO,kC,SC2GnU,EA/FyB,WACvB,OAA0BA,EAAAA,EAAAA,UAAS,CACjCC,KAAM,CAAC,EACPC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAKQC,GAAYC,EAAAA,EAAAA,MAAZD,SAGRE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,2FACjBJ,GAAS,SAAAK,GAAS,yBAAUA,GAAV,IAAqBR,SAAS,EAAMC,MAAO,MAA3C,IADD,mBAGMQ,EAAAA,EAAAA,IAAgBL,GAHtB,OAGTM,EAHS,OAIfC,QAAQC,IAAIF,GAEZP,GAAS,SAAAK,GACP,OAAO,kBAAKA,GAAZ,IAAuBT,KAAMW,GAC9B,IARc,gDAUfP,GAAS,SAAAK,GAAS,yBAAUA,GAAV,IAAqBP,MAAK,MAA1B,IAVH,yBAYfE,GAAS,SAAAK,GACP,OAAO,kBAAKA,GAAZ,IAAuBR,SAAS,GACjC,IAdc,4EAAH,qDAiBhBO,GACD,GAAE,CAACJ,EAAUC,IAEd,IAAMS,GAAWC,EAAAA,EAAAA,MAMTf,EAASG,EAATH,KAIR,OACE,iBAAKgB,UAAWC,EAAAA,OAAhB,WACE,iBAAKD,UAAWC,EAAAA,KAAhB,WACE,mBAAQD,UAAWC,EAAQC,QAXlB,kBAAMJ,GAAU,EAAhB,EAWT,UACE,yCAEF,0BACE,gBACEE,UAAWC,EAAAA,OACXE,KACM,OAAJnB,QAAI,IAAJA,OAAA,EAAAA,EAAMoB,cAAN,yCACkCpB,EAAKoB,aAEzCC,IAAI,QAKR,gBAAKL,UAAWC,EAAAA,KAAhB,UACE,4BACE,8CACA,mCAEGjB,EAAKsB,UAER,6BAAKtB,EAAKuB,iBAEV,kCACO,4BAAOC,KAAKC,KAAyB,IAApBzB,EAAK0B,cAAsB,GAA5C,WAEP,eAAGV,UAAWC,EAAAA,OAAd,oBAEGjB,EAAK2B,QACJ3B,EAAK2B,OAAOC,KAAI,SAAAC,GAAK,OACnB,0BAAsBA,EAAMC,MAAjBD,EAAME,GADE,aAM7B,gBAAKf,UAAWC,EAAAA,SAAhB,UACE,uCAAejB,EAAKgC,kBAGxB,gBAAIhB,UAAWC,EAAAA,KAAf,WACE,SAAC,KAAD,CAAMgB,GAAE,kBAAa5B,EAAb,SAA6BW,UAAWC,EAAAA,KAAhD,qBAGA,SAAC,KAAD,CAAMgB,GAAE,kBAAa5B,EAAb,YAAgCW,UAAWC,EAAAA,KAAnD,yBAIF,SAAC,KAAD,MAGL,C,kDC/FD,UAVmB,WACjB,OACE,4BACE,oCACA,uCACA,SAAC,UAAD,MAGL,C,8JCRKiB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,iCAGEC,EAAgB,mCAAG,wIAAc,EAAd,SACPH,EAASI,IAC9B,gFAF4B,uBACtBC,EADsB,EACtBA,KADsB,kBAIvBA,EAAKC,SAJkB,2CAAH,qDAOhB9B,EAAe,mCAAG,WAAML,GAAN,uFACN6B,EAASI,IAAT,iBACXjC,EADW,6DADM,cACvBoC,EADuB,yBAItBA,EAASF,MAJa,2CAAH,sDAOfG,EAAO,mCAAG,WAAMrC,GAAN,yFACE6B,EAASI,IAAT,iBACXjC,EADW,sEADF,uBACbkC,EADa,EACbA,KADa,kBAIdA,EAAKI,MAJS,2CAAH,sDAOPC,EAAS,mCAAG,WAAMvC,GAAN,yFACA6B,EAASI,IAAT,iBACXjC,EADW,qEADA,uBACfkC,EADe,EACfA,KADe,kBAIhBA,EAAKC,SAJW,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/pages/MovieDetailsPage/movie-details-page.module.css?8c21","components/pages/MovieDetailsPage/MovieDetailsPage.jsx","components/pages/MoviesPage/MoviesPage.jsx","components/shared/api/api-movie.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wraper\":\"movie-details-page_wraper__HAJHV\",\"wrap\":\"movie-details-page_wrap__ecKB5\",\"poster\":\"movie-details-page_poster__+3YiL\",\"text\":\"movie-details-page_text__KiZFd\",\"genres\":\"movie-details-page_genres__B5xuH\",\"overview\":\"movie-details-page_overview__PQi3D\",\"page\":\"movie-details-page_page__G7vPS\",\"link\":\"movie-details-page_link__P9f1x\"};","// import { useParams, useNavigate, Outlet, useLocation } from 'react-router-dom';\nimport {\n  useParams,\n  useNavigate,\n  Link,\n  Outlet,\n  // useLocation,\n} from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieDetails } from 'components/shared/api/api-movie';\n\nimport styles from './movie-details-page.module.css';\n\nconst MovieDetailsPage = () => {\n  const [state, setState] = useState({\n    item: {},\n    loading: false,\n    error: null,\n  });\n  const { movieId } = useParams();\n  // console.log(id);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      setState(prevState => ({ ...prevState, loading: true, error: null }));\n      try {\n        const result = await getMovieDetails(movieId);\n        console.log(result);\n\n        setState(prevState => {\n          return { ...prevState, item: result };\n        });\n      } catch (error) {\n        setState(prevState => ({ ...prevState, error }));\n      } finally {\n        setState(prevState => {\n          return { ...prevState, loading: false };\n        });\n      }\n    };\n    fetchMovie();\n  }, [setState, movieId]);\n\n  const navigate = useNavigate();\n  // console.log(navigate);\n  const goBack = () => navigate(-1);\n\n  // const location = useLocation();\n\n  const { item } = state;\n  // // const { title, overview, poster_path } = state;\n  // console.log(item);\n  // console.log(item);\n  return (\n    <div className={styles.wraper}>\n      <div className={styles.wrap}>\n        <button className={styles} onClick={goBack}>\n          <span>GO BACK</span>\n        </button>\n        <div>\n          <img\n            className={styles.poster}\n            src={\n              item?.poster_path &&\n              `https://image.tmdb.org/t/p/w500${item.poster_path}`\n            }\n            alt=\"\"\n            // alt={item.title}\n          />\n        </div>\n\n        <div className={styles.text}>\n          <div>\n            <h4>MovieDetailsPage</h4>\n            <h2>\n              Title:\n              {item.title}\n            </h2>\n            <p> {item.release_date}</p>\n\n            <p>\n              Vote <span>{Math.ceil(item.vote_average * 100) / 10}%</span>\n            </p>\n            <p className={styles.genres}>\n              Genres:\n              {item.genres &&\n                item.genres.map(genre => (\n                  <span key={genre.id}>{genre.name}</span>\n                ))}\n            </p>\n          </div>\n        </div>\n        <div className={styles.overview}>\n          <h5>Overview: {item.overview}</h5>\n        </div>\n      </div>\n      <ul className={styles.page}>\n        <Link to={`/movies/${movieId}/cast`} className={styles.link}>\n          Actors\n        </Link>\n        <Link to={`/movies/${movieId}/reviews`} className={styles.link}>\n          Reviews\n        </Link>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\nexport default MovieDetailsPage;\n\n//\n//\n// import { getSinglePost } from '../../shared/api/api-posts';\n\n// import { Link } from 'react-router-dom';\n\n// const SinglePostPageOld = () => {\n//   const [state, setState] = useState({\n//     item: {},\n//     loading: false,\n//     error: null,\n//   });\n\n//   const { id } = useParams();\n//   //   console.log(id);\n\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       setState(prevState => ({ ...prevState, loading: true, error: null }));\n//       try {\n//         const result = await getSinglePost(id);\n//         setState(prevState => {\n//           return { ...prevState, item: result };\n//         });\n//       } catch (error) {\n//         setState(prevState => ({ ...prevState, error }));\n//       } finally {\n//         setState(prevState => {\n//           return { ...prevState, loading: false };\n//         });\n//       }\n//     };\n//     fetchPosts();\n//   }, [setState, id]);\n\n//   const location = useLocation();\n//   const from = location.state?.from || './posts';\n//   console.log('SinglePostPageOld', location);\n\n//   const navigate = useNavigate();\n//   // console.log(navigate);\n//   const goBack = () => navigate(from);\n\n//   const { title, body } = state.item;\n\n//   return (\n//     <div>\n//       <button onClick={goBack}>GO BACK</button>\n//       <h3>{title}</h3>\n//       <p>{body}</p>\n//       <Link state={{ from }} to={`/posts/${id}/comments`}>\n//         show comments\n//       </Link>\n\n//       <Outlet />\n//     </div>\n//   );\n// };\n// export default SinglePostPageOld;\n","import MovieDetailsPage from '../MovieDetailsPage/MovieDetailsPage';\n\nconst MoviesPage = () => {\n  return (\n    <div>\n      <h2>Movies</h2>\n      <p>MoviesPage</p>\n      <MovieDetailsPage />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getTrendingMovie = async (page = 1) => {\n  const { data } = await instance.get(\n    '/trending/movie/week?api_key=f7a41df070de2591b426f4643d7fd0fb&language=en-US'\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await instance.get(\n    `/movie/${movieId}?api_key=f7a41df070de2591b426f4643d7fd0fb&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await instance.get(\n    `/movie/${movieId}}/credits?api_key=f7a41df070de2591b426f4643d7fd0fb&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const getReview = async movieId => {\n  const { data } = await instance.get(\n    `/movie/${movieId}/reviews?api_key=f7a41df070de2591b426f4643d7fd0fb&language=en-US`\n  );\n  return data.results;\n};\n"],"names":["useState","item","loading","error","state","setState","movieId","useParams","useEffect","fetchMovie","prevState","getMovieDetails","result","console","log","navigate","useNavigate","className","styles","onClick","src","poster_path","alt","title","release_date","Math","ceil","vote_average","genres","map","genre","name","id","overview","to","instance","axios","baseURL","getTrendingMovie","get","data","results","response","getCast","cast","getReview"],"sourceRoot":""}