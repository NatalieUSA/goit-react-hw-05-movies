{"version":3,"file":"static/js/40.7b16285d.chunk.js","mappings":"wSAEaA,EAAOC,EAAAA,GAAAA,IAAH,+OAcJC,EAAQD,EAAAA,GAAAA,GAAH,wLAYLE,EAAQF,EAAAA,GAAAA,IAAH,6N,SC0BlB,EA7CiB,WACf,OAA0BG,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBN,GAAW,GACXE,EAAS,MAFO,mBAKOK,EAAAA,EAAAA,IAAQJ,GALf,OAKRK,EALQ,OAOdV,EAASU,GAPK,gDASdN,EAAS,KAAMO,SATD,2CAWPT,GAAW,IAXJ,+DAAH,qDAcfM,GACD,GAAE,CAACH,KAGF,UAACX,EAAD,YACE,UAACE,EAAD,4BAAsBG,EAAMa,OAA5B,OACCb,EAAMa,OAAS,GACdb,EAAMc,KAAI,SAAAC,GAAI,OACZ,SAACjB,EAAD,CAEEkB,IACM,OAAJD,QAAI,IAAJA,GAAAA,EAAME,aAAN,yCACsCF,EAAKE,cACvCC,EAENC,IAAG,gBAAWJ,EAAKK,OANdd,EAFK,IAWfJ,IAAW,SAACmB,EAAA,EAAD,IACXjB,IAAS,sEAA8CA,OAG7D,C,wLCnDKkB,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,iCAGEC,EAAgB,mCAAG,wIAAc,EAAd,SACPH,EAASI,IAC9B,gFAF4B,uBACtBC,EADsB,EACtBA,KADsB,kBAIvBA,EAAKC,SAJkB,2CAAH,qDAOhBC,EAAe,mCAAG,WAAMvB,GAAN,uFACNgB,EAASI,IAAT,iBACXpB,EADW,6DADM,cACvBwB,EADuB,yBAItBA,EAASH,MAJa,2CAAH,sDAOfjB,EAAO,mCAAG,WAAMJ,GAAN,yFACEgB,EAASI,IAAT,iBACXpB,EADW,sEADF,uBACbqB,EADa,EACbA,KADa,kBAIdA,EAAKI,MAJS,2CAAH,sDAOPC,EAAS,mCAAG,WAAM1B,GAAN,yFACAgB,EAASI,IAAT,iBACXpB,EADW,qEADA,uBACfqB,EADe,EACfA,KADe,kBAIhBA,EAAKC,SAJW,2CAAH,sDAOTK,EAAc,mCAAG,WAAMC,GAAN,yFACLZ,EAASI,IAAT,8BACEQ,EADF,oEADK,uBACpBP,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,qD","sources":["Pages/CastPage/CastPage.styled.js","Pages/CastPage/CastPage.jsx","components/shared/api/api-movie.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 50px;\n  flex-wrap: wrap;\n  gap: 30px;\n  list-style: none;\n  padding: 0;\n  @media (max-width: 767px) {\n    gap: 10px;\n  } ;\n`;\n\nexport const Total = styled.h2`\n  color: white;\n  padding: 0 5% 1% 1%;\n  margin: 0 5%;\n  width: 100%;\n\n  @media (min-width: 1024px) {\n    color: white;\n    padding: 0 10% 10% 6%;\n  }\n`;\n\nexport const Image = styled.img`\n  object-fit: cover;\n  // object-fit: cover;\n\n  @media (max-width: 1023px) {\n    width: calc((100% - 30px) / 6);\n  }\n  @media (min-width: 1024px) {\n    width: calc((100% - 30px) / 8);\n  }\n`;\n\n// .info {\n//   font-size: large;\n//   color: white;\n//   text-align: center;\n//   padding: 0 10% 10% 6%;\n// }\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getCast } from 'components/shared/api/api-movie';\nimport defaultimage from './dfi.jpg';\n\nimport { Loader } from 'components/shared/Loader/Loader';\nimport { Image, Total, Wrap } from './CastPage.styled';\n\nconst CastPage = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        const result = await getCast(movieId);\n        // console.log(result);\n        setItems(result);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        return setLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <Wrap>\n      <Total>Total actors: {items.length} </Total>\n      {items.length > 0 &&\n        items.map(item => (\n          <Image\n            key={movieId}\n            src={\n              item?.profile_path\n                ? `https://image.tmdb.org/t/p/w500${item.profile_path}`\n                : defaultimage\n            }\n            alt={`actor ${item.name}`}\n          />\n        ))}\n      {loading && <Loader />}\n      {error && <p>...error load actors...actors load failed {error}</p>}\n    </Wrap>\n  );\n};\nexport default CastPage;\n\nCastPage.propTypes = {\n  movieId: PropTypes.string,\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getTrendingMovie = async (page = 1) => {\n  const { data } = await instance.get(\n    '/trending/movie/week?api_key=f7a41df070de2591b426f4643d7fd0fb&language=en-US'\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await instance.get(\n    `/movie/${movieId}?api_key=f7a41df070de2591b426f4643d7fd0fb&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await instance.get(\n    `/movie/${movieId}}/credits?api_key=f7a41df070de2591b426f4643d7fd0fb&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const getReview = async movieId => {\n  const { data } = await instance.get(\n    `/movie/${movieId}/reviews?api_key=f7a41df070de2591b426f4643d7fd0fb&language=en-US`\n  );\n  return data.results;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get(\n    `/search/movie?query=${query}&api_key=f7a41df070de2591b426f4643d7fd0fb&language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["Wrap","styled","Total","Image","useState","items","setItems","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchCast","getCast","result","message","length","map","item","src","profile_path","defaultimage","alt","name","Loader","instance","axios","baseURL","getTrendingMovie","get","data","results","getMovieDetails","response","cast","getReview","getSearchMovie","query"],"sourceRoot":""}